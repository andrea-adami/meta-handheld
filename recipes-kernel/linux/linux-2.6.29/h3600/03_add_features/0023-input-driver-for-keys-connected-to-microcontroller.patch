From 3e8165f514e5705eaf2e5be09cd8ebea4b257fb7 Mon Sep 17 00:00:00 2001
From: Dmitry Artamonow <mad_soft@inbox.ru>
Date: Sat, 21 Mar 2009 16:22:16 +0300
Subject: [PATCH 23/28] input: driver for keys connected to microcontroller on iPaq h3600

Based on a driver from handhelds.org 2.6.21 kernel, written
by Alessandro GARDICH.

Signed-off-by: Dmitry Artamonow <mad_soft@inbox.ru>
---
 drivers/input/keyboard/Kconfig      |    7 ++
 drivers/input/keyboard/Makefile     |    1 +
 drivers/input/keyboard/micro_keys.c |  148 +++++++++++++++++++++++++++++++++++
 3 files changed, 156 insertions(+), 0 deletions(-)
 create mode 100644 drivers/input/keyboard/micro_keys.c

diff --git a/drivers/input/keyboard/Kconfig b/drivers/input/keyboard/Kconfig
index 3556168..aeb770d 100644
--- a/drivers/input/keyboard/Kconfig
+++ b/drivers/input/keyboard/Kconfig
@@ -250,6 +250,13 @@ config KEYBOARD_HP7XX
 	  To compile this driver as a module, choose M here: the
 	  module will be called jornada720_kbd.
 
+config KEYBOARD_MICRO
+	tristate "Buttons on Micro SoC (iPaq h3100,h3600,h3700)"
+	depends on IPAQ_MICRO
+	help
+	  This enables support for the buttons attached to
+	  Micro peripheral controller on iPAQ h3100/h3600/h3700
+
 config KEYBOARD_OMAP
 	tristate "TI OMAP keypad support"
 	depends on (ARCH_OMAP1 || ARCH_OMAP2)
diff --git a/drivers/input/keyboard/Makefile b/drivers/input/keyboard/Makefile
index 36351e1..928e7b5 100644
--- a/drivers/input/keyboard/Makefile
+++ b/drivers/input/keyboard/Makefile
@@ -25,6 +25,7 @@ obj-$(CONFIG_KEYBOARD_AAED2000)		+= aaed2000_kbd.o
 obj-$(CONFIG_KEYBOARD_GPIO)		+= gpio_keys.o
 obj-$(CONFIG_KEYBOARD_HP6XX)		+= jornada680_kbd.o
 obj-$(CONFIG_KEYBOARD_HP7XX)		+= jornada720_kbd.o
+obj-$(CONFIG_KEYBOARD_MICRO)		+= micro_keys.o
 obj-$(CONFIG_KEYBOARD_MAPLE)		+= maple_keyb.o
 obj-$(CONFIG_KEYBOARD_BFIN)		+= bf54x-keys.o
 obj-$(CONFIG_KEYBOARD_SH_KEYSC)		+= sh_keysc.o
diff --git a/drivers/input/keyboard/micro_keys.c b/drivers/input/keyboard/micro_keys.c
new file mode 100644
index 0000000..721581f
--- /dev/null
+++ b/drivers/input/keyboard/micro_keys.c
@@ -0,0 +1,148 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * h3600 atmel micro companion support, key subdevice
+ * based on previous kernel 2.4 version
+ * Author : Alessandro Gardich <gremlin@gremlin.it>
+ *
+ */
+
+
+#include <linux/module.h>
+#include <linux/version.h>
+
+#include <linux/init.h>
+#include <linux/fs.h>
+#include <linux/interrupt.h>
+#include <linux/sched.h>
+#include <linux/pm.h>
+#include <linux/sysctl.h>
+#include <linux/proc_fs.h>
+#include <linux/delay.h>
+#include <linux/device.h>
+#include <linux/input.h>
+#include <linux/platform_device.h>
+
+#include <mach/hardware.h>
+
+#include <mach/h3600.h>
+#include <mach/SA-1100.h>
+
+#include <linux/mfd/micro.h>
+
+/*--- methods ---*/
+static struct micro_private_t *p_micro;
+
+/*--- keys ---*/
+static struct input_dev *micro_key_input;
+
+#define NUM_KEYS 10
+int keycodes[NUM_KEYS] = {
+	KEY_RECORD,		/* 1:  Record button			*/
+	KEY_CALENDAR,		/* 2:  Calendar				*/
+	KEY_ADDRESSBOOK,	/* 3:  Contacts (looks like Outlook)	*/
+	KEY_MAIL,		/* 4:  Envelope (Q on older iPAQs)	*/
+	KEY_HOMEPAGE,		/* 5:  Start (looks like swoopy arrow)	*/
+	KEY_UP,			/* 6:  Up				*/
+	KEY_RIGHT,		/* 7:  Right				*/
+	KEY_LEFT,		/* 8:  Left				*/
+	KEY_DOWN,		/* 9:  Down				*/
+};
+
+static void micro_key_receive(int len, unsigned char *data)
+{
+	int key, down;
+
+	down = (0x80 & data[0]) ? 1 : 0;
+	key  = 0x7f & data[0];
+
+	if (key < NUM_KEYS) {
+		input_report_key(micro_key_input, keycodes[key], down);
+		input_sync(micro_key_input);
+	}
+}
+
+static int micro_key_probe(struct platform_device *pdev)
+{
+	int i;
+
+	micro_key_input = input_allocate_device();
+
+	micro_key_input->evbit[0] = BIT(EV_KEY);
+	set_bit(EV_KEY, micro_key_input->evbit);
+	for (i = 0; i < NUM_KEYS; i++)
+		set_bit(keycodes[i], micro_key_input->keybit);
+
+	micro_key_input->name = "h3600 micro keys";
+
+	input_register_device(micro_key_input);
+
+	/*--- callback ---*/
+	p_micro = dev_get_drvdata(&(pdev->dev));
+	spin_lock(p_micro->lock);
+	p_micro->h_key = micro_key_receive;
+	spin_unlock(p_micro->lock);
+
+	return 0;
+}
+
+static int micro_key_remove(struct platform_device *pdev)
+{
+	input_unregister_device(micro_key_input);
+
+	spin_lock(p_micro->lock);
+	p_micro->h_key = NULL;
+	spin_unlock(p_micro->lock);
+
+	return 0;
+}
+
+static int micro_key_suspend(struct platform_device *pdev,
+				pm_message_t statel)
+{
+	spin_lock(p_micro->lock);
+	p_micro->h_key = NULL;
+	spin_unlock(p_micro->lock);
+
+	return 0;
+}
+
+static int micro_key_resume(struct platform_device *pdev)
+{
+	spin_lock(p_micro->lock);
+	p_micro->h_key = NULL;
+	spin_unlock(p_micro->lock);
+
+	return 0;
+}
+
+struct platform_driver micro_key_device_driver = {
+	.driver = {
+		.name    = "h3600-micro-keys",
+	},
+	.probe   = micro_key_probe,
+	.remove  = micro_key_remove,
+	.suspend = micro_key_suspend,
+	.resume  = micro_key_resume,
+};
+
+static int micro_key_init(void)
+{
+	return platform_driver_register(&micro_key_device_driver);
+}
+
+static void micro_key_cleanup(void)
+{
+	platform_driver_unregister(&micro_key_device_driver);
+}
+
+module_init(micro_key_init);
+module_exit(micro_key_cleanup);
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("gremlin.it");
+MODULE_DESCRIPTION("driver for iPAQ Atmel micro keys");
+
+
-- 
1.6.1.3

