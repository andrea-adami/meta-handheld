From 8ea0c09d91f9accf87e4d821b0dcd91aa2bc4f33 Mon Sep 17 00:00:00 2001
From: Dmitry Artamonow <mad_soft@inbox.ru>
Date: Sat, 21 Mar 2009 16:27:19 +0300
Subject: [PATCH 24/28] input: driver for touchscreen on iPaq h3600/h3100

Based on a driver from handhelds.org 2.6.21 kernel, written
by Alessandro GARDICH.

Signed-off-by: Dmitry Artamonow <mad_soft@inbox.ru>
---
 drivers/input/touchscreen/Kconfig    |    4 +
 drivers/input/touchscreen/Makefile   |    1 +
 drivers/input/touchscreen/micro_ts.c |  159 ++++++++++++++++++++++++++++++++++
 3 files changed, 164 insertions(+), 0 deletions(-)
 create mode 100644 drivers/input/touchscreen/micro_ts.c

diff --git a/drivers/input/touchscreen/Kconfig b/drivers/input/touchscreen/Kconfig
index 5f862d1..a46ef79 100644
--- a/drivers/input/touchscreen/Kconfig
+++ b/drivers/input/touchscreen/Kconfig
@@ -171,6 +171,10 @@ config TOUCHSCREEN_HP7XX
 	  To compile this driver as a module, choose M here: the
 	  module will be called jornada720_ts.
 
+config TOUCHSCREEN_IPAQ_MICRO
+	tristate "HP iPAQ Micro ASIC - touchscreen driver"
+	depends on IPAQ_MICRO && INPUT
+
 config TOUCHSCREEN_HTCPEN
 	tristate "HTC Shift X9500 touchscreen"
 	depends on ISA
diff --git a/drivers/input/touchscreen/Makefile b/drivers/input/touchscreen/Makefile
index 8a4a3d3..e548376 100644
--- a/drivers/input/touchscreen/Makefile
+++ b/drivers/input/touchscreen/Makefile
@@ -19,6 +19,7 @@ obj-$(CONFIG_TOUCHSCREEN_MTOUCH)	+= mtouch.o
 obj-$(CONFIG_TOUCHSCREEN_MK712)		+= mk712.o
 obj-$(CONFIG_TOUCHSCREEN_HP600)		+= hp680_ts_input.o
 obj-$(CONFIG_TOUCHSCREEN_HP7XX)		+= jornada720_ts.o
+obj-$(CONFIG_TOUCHSCREEN_IPAQ_MICRO)	+= micro_ts.o
 obj-$(CONFIG_TOUCHSCREEN_HTCPEN)	+= htcpen.o
 obj-$(CONFIG_TOUCHSCREEN_USB_COMPOSITE)	+= usbtouchscreen.o
 obj-$(CONFIG_TOUCHSCREEN_PENMOUNT)	+= penmount.o
diff --git a/drivers/input/touchscreen/micro_ts.c b/drivers/input/touchscreen/micro_ts.c
new file mode 100644
index 0000000..6f0bc1d
--- /dev/null
+++ b/drivers/input/touchscreen/micro_ts.c
@@ -0,0 +1,159 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * h3600 atmel micro companion support, touchscreen subdevice
+ * Author : Alessandro Gardich <gremlin@gremlin.it>
+ *
+ */
+
+
+#include <linux/module.h>
+#include <linux/version.h>
+
+#include <linux/init.h>
+#include <linux/fs.h>
+#include <linux/interrupt.h>
+#include <linux/sched.h>
+#include <linux/pm.h>
+#include <linux/sysctl.h>
+#include <linux/proc_fs.h>
+#include <linux/delay.h>
+#include <linux/device.h>
+#include <linux/input.h>
+#include <linux/platform_device.h>
+
+#include <asm/irq.h>
+#include <mach/hardware.h>
+
+#include <linux/mfd/micro.h>
+
+
+struct ts_sample {
+	unsigned short x;
+	unsigned short y;
+};
+
+
+struct touchscreen_data {
+	struct input_dev *input;
+};
+
+static struct micro_private_t *p_micro;
+struct touchscreen_data *ts;
+
+static void micro_ts_receive(int len, unsigned char *data)
+{
+	if (len == 4) {
+		input_report_abs(ts->input, ABS_X, (data[2]<<8)+data[3]);
+		input_report_abs(ts->input, ABS_Y, (data[0]<<8)+data[1]);
+		input_report_abs(ts->input, ABS_PRESSURE, 1);
+		input_report_key(ts->input, BTN_TOUCH, 0);
+	}
+	if (len == 0) {
+		input_report_abs(ts->input, ABS_X, 0);
+		input_report_abs(ts->input, ABS_Y, 0);
+		input_report_abs(ts->input, ABS_PRESSURE, 0);
+		input_report_key(ts->input, BTN_TOUCH, 1);
+	}
+	input_sync(ts->input);
+}
+
+
+static int micro_ts_probe(struct platform_device *pdev)
+{
+	printk(KERN_ERR "micro touchscreen probe : begin\n");
+
+	ts = kzalloc(sizeof(*ts), GFP_KERNEL);
+	if (!ts)
+		return -ENOMEM;
+
+	p_micro = platform_get_drvdata(pdev);
+
+	platform_set_drvdata(pdev, ts);
+	/* dev->driver_data = ts; */
+
+	ts->input = input_allocate_device();
+
+	ts->input->evbit[0] = BIT(EV_ABS);
+	ts->input->absbit[0] = BIT(ABS_X) | BIT(ABS_Y) | BIT(ABS_PRESSURE);
+
+	ts->input->absmin[ABS_X] = 0;
+	ts->input->absmin[ABS_Y] = 0;
+	ts->input->absmin[ABS_PRESSURE] = 0;
+	ts->input->absmax[ABS_X] = 1023;
+	ts->input->absmax[ABS_Y] = 1023;
+	ts->input->absmax[ABS_PRESSURE] = 1;
+
+	ts->input->name = "micro ts";
+	/* ts->input->private = ts; */
+
+	input_register_device(ts->input);
+
+	/*--- callback ---*/
+	spin_lock(p_micro->lock);
+	p_micro->h_ts = micro_ts_receive;
+	spin_unlock(p_micro->lock);
+
+	printk(KERN_ERR "micro touchscreen probe : end\n");
+	return 0;
+}
+
+static int micro_ts_remove(struct platform_device *pdev)
+{
+	struct touchscreen_data *ts;
+
+	ts = platform_get_drvdata(pdev);
+
+	spin_lock(p_micro->lock);
+	p_micro->h_ts = NULL;
+	spin_unlock(p_micro->lock);
+	input_unregister_device(ts->input);
+	kfree(ts);
+
+	return 0;
+}
+
+static int micro_ts_suspend(struct platform_device *dev, pm_message_t statel)
+{
+	spin_lock(p_micro->lock);
+	p_micro->h_ts = NULL;
+	spin_unlock(p_micro->lock);
+	return 0;
+}
+
+static int micro_ts_resume(struct platform_device *dev)
+{
+	spin_lock(p_micro->lock);
+	p_micro->h_ts = micro_ts_receive;
+	spin_unlock(p_micro->lock);
+	return 0;
+}
+
+struct platform_driver micro_ts_device_driver = {
+	.driver  = {
+		.name    = "h3600-micro-ts",
+	},
+	.probe   = micro_ts_probe,
+	.remove  = micro_ts_remove,
+	.suspend = micro_ts_suspend,
+	.resume  = micro_ts_resume,
+};
+
+static int micro_ts_init(void)
+{
+	return platform_driver_register(&micro_ts_device_driver);
+}
+
+static void micro_ts_cleanup(void)
+{
+	platform_driver_unregister(&micro_ts_device_driver);
+}
+
+module_init(micro_ts_init);
+module_exit(micro_ts_cleanup);
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("gremlin.it");
+MODULE_DESCRIPTION("driver for iPAQ Atmel micro touchscreen");
-- 
1.6.1.3

